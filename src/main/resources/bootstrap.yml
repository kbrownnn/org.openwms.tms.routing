spring:
  application:
    name: routing-service
  cloud:
    config:
      discovery:
        enabled: false
        service-id: openwms-config
      enabled: false
      fail-fast: true # true means retry
      retry:
        max-attempts: 120
  security:
    user:
      password: sa
      name: user
  liquibase:
    enabled: false
  mvc:
    static-path-pattern: /ui/**
  jpa:
    database: h2
    show-sql: false
    open-in-view: false
  jackson:
    date-format: yyyy-MM-dd'T'HH:mm:ss.SSSZ
  main:
    allow-bean-definition-overriding: true
camunda:
  bpm:
    auto-deployment-enabled: false
    enabled: false
    database:
      schema-name: camunda
      table-prefix: camunda.

feign:
  httpclient:
    connection-timeout: 30000
    connection-timer-repeat: 30000
ribbon:
  connectTimeout: 30000
  ReadTimeout: 30000

owms:
  eureka:
    url: http://user:sa@localhost:8761
    zone: ${owms.eureka.url}/eureka/
  driver:
    osip:
      enabled: false
  routing:
    serialization: json
    common-service-name: common-service
  srv:
    protocol: http
    hostname: localhost

server:
  port: ${PORT:8130}

eureka:
  client:
    instance-info-replication-interval-seconds: 10 # default is 30
    service-url:
      defaultZone: ${owms.eureka.zone}  # Must be camelCase
  instance:
    hostname: ${owms.srv.hostname}
    secure-port-enabled: false
    non-secure-port-enabled: true
    metadata-map:
      username: ${spring.security.user.name}
      password: ${spring.security.user.password}
      protocol: ${owms.srv.protocol}
      zone: ${owms.eureka.zone}
      config-protocol: http # The protocol used to access the config server

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    rabbit:
      enabled: false

logging:
  file:
    name: BOOT-TMS-Routing.log
    path: "/tmp/owms"

flowable:
  process-definition-location-prefix: classpath*:/flowable/processes/
  dmn:
    resource-location: classpath*:/flowable/dmn/
  database-schema-update: true

---
spring:
  profiles: DEMO
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        hbm2ddl:
          import_files: import-DEMO.sql

camunda:
  bpm:
    database:
      schema-name:
      table-prefix:

---
spring:
  profiles: CAMUNDA
flowable:
  app:
    enabled: false
    deploy-resources: false
    servlet:
      load-on-startup: 0
  cmmn:
    enabled: false
    deploy-resources: false
    servlet:
      load-on-startup: 0
  content:
    enabled: false
    servlet:
      load-on-startup: 0
  database-schema-update: false
  dmn:
    enabled: false
    deploy-resources: false
    servlet:
      load-on-startup: 0
    history-enabled: false
  form:
    enabled: false
    deploy-resources: false
    servlet:
      load-on-startup: 0
  idm:
    enabled: false
    servlet:
      load-on-startup: 0
  process:
    enabled: false
    servlet:
      load-on-startup: 0
  jpa-enabled: false
camunda:
  bpm:
    auto-deployment-enabled: true
    enabled: true
    deployment-resource-pattern: classpath*:**/camunda/processes/*.bpmn20.xml,classpath*:**/camunda/processes/*.bpmn,classpath*:**/camunda/processes/*.dmn11.xml,classpath*:**/camunda/processes/*.dmn

---
spring:
  profiles: HEROKU
  main:
    banner-mode: "OFF"
  cloud:
    config:
      discovery:
        enabled: true
      enabled: true
      headers:
        protocol: ${owms.cfgsrv.protocol:https}

owms:
  srv:
    protocol: https
    hostname: openwms-routing-service.herokuapp.com

eureka:
  instance:
    secure-port-enabled: true
    non-secure-port-enabled: false
    statusPageUrl: ${owms.srv.protocol}://${owms.srv.hostname}:${server.port}/actuator/info
    healthCheckUrl: ${owms.srv.protocol}://${owms.srv.hostname}:${server.port}/actuator/health
    homePageUrl: ${owms.srv.protocol}://${owms.srv.hostname}:${server.port}/actuator/
    metadata-map:
      config-protocol: ${owms.cfgsrv.protocol:https}

---
spring:
  profiles: ASYNCHRONOUS

owms:
  requests:
    tms:
      to:
        exchange-name: tms.requests
    routing:
      to:
        exchange-name: routing.requests
        queue-name: routing-requests-queue
        routing-key: "*.*.*"

management:
  health:
    rabbit:
      enabled: true

---
spring:
  profiles: TEST
  cloud:
    config:
      fail-fast: false
  main:
    banner-mode: "off"

---
spring:
  profiles: TESTPG
  jpa:
    database: postgresql
    generate-ddl: true
    properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQL9Dialect
      hibernate.temp.use_jdbc_metadata_defaults: false
      hibernate.default_schema: public
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql:RBDB
    username: KARL
    password: KARL
